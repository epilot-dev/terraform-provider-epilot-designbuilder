openapi: 3.0.3
info:
  title: "Design Builder API v2"
  version: 0.0.1
tags:
  - name: design-builder
    description: Available design-builder over designs provided by Design Builder v2
servers:
  - url: https://design-builder-api.sls.epilot.io
security:
  - custom_authorizer: []
paths:
  /v1/designs:
    get:
      operationId: getAllDesigns
      summary: retrieve all designs for the user organization
      description: Scan all designs linked to a organization, based in orgId attribute from JWT auth token
      tags:
        - name: APP
          description: Design-Builder
      responses:
        200:
          description: Success - designs loaded with success. Empty array if org has no designs.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GetAllDesignsRes"
        500:
          description: Other errors
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResp"
    post:
      x-speakeasy-entity-operation: Design#create
      operationId: addDesign
      summary: create a new design for the user organization
      description: Create a brand new design linked to a organization, based in orgId attribute from JWT auth token
      tags:
        - name: APP
          description: Design-Builder
      requestBody:
        description: Design payload
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddDesignReq"
      responses:
        201:
          description: Success - design created with success.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddDesignRes"
        400:
          description: Validation Errors
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResp"
        401:
          description: Authentication Errors
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResp"
        500:
          description: Other errors
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResp"
  /v1/designs/{designId}:
  parameters:
        - in: path
          name: designId
          x-speakeasy-match: id
          schema:
            type: string
          required: true
          description: Id of the design
          example: 4a062990-a6a3-11eb-9828-4f3da7d4935a
    get:
      x-speakeasy-entity-operation: Design#get
      operationId: getDesign
      summary: retrieve a specific design by its id
      description: Search for a specific design owned by user organization
      tags:
        - name: APP
          description: Design-Builder
    
      responses:
        200:
          description: Success - design loaded with success.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetDesignRes"
        400:
          description: Validation Errors
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResp"
        401:
          description: Authentication Errors
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResp"
        404:
          description: No design found
        500:
          description: Other errors
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResp"
    delete:
      x-speakeasy-entity-operation: Design#delete
      operationId: deleteDesign
      summary: delete an especific design by its id
      description: Search and delete for a especific design owned by user organization
      tags:
        - name: APP
          description: Design-Builder
      parameters:
        - in: path
          name: designId
          x-speakeasy-match: id
          schema:
            type: string
          required: true
          description: Id of the design
          example: 4a062990-a6a3-11eb-9828-4f3da7d4935a
      responses:
        204:
          description: Success - design deleted with success.
        400:
          description: Validation Errors
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResp"
        401:
          description: Authentication Errors
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResp"
        404:
          description: No design found
        500:
          description: Other errors
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResp"
    put:
      x-speakeasy-entity-operation: Design#update
      operationId: updateDesign
      summary: update an especific design by its id
      description: Update a especific design owned by user organization
      tags:
        - name: APP
          description: Design-Builder
      parameters:
        - in: path
          name: designId
          x-speakeasy-match: id
          schema:
            type: string
          required: true
          description: Id of the design
          example: 4a062990-a6a3-11eb-9828-4f3da7d4935a
      requestBody:
        description: Design payload
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDesignReq"
      responses:
        204:
          description: Success - design updated with success.
        400:
          description: Validation Errors
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResp"
        401:
          description: Authentication Errors
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResp"
        404:
          description: No design found
        500:
          description: Other errors
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResp"
components:
  securitySchemes:
    custom_authorizer:            
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    UploadFileReq:
      type: object
      properties:
        file_type:
          type: string
          enum:
            - LOGO
            - FONT
        file_data:
          type: string
          format: base64
        display_name:
          type: string
        file_name:
          type: string
      required:
        - file_type
        - file_name
        - file_data
    UploadFileRes:
      type: object
      allOf:
      - $ref: "#/components/schemas/FileData"
    GetFilesRes:
      type: array
      items:
        allOf:
        - $ref: "#/components/schemas/FileData"
    GetAllDesignsRes:
      type: object
      properties:
        designs:
          type: array
          items:
            allOf:
            - $ref: "#/components/schemas/DesignItem"
            - $ref: "#/components/schemas/Custom_Style"
    GetBrandsRes:
      type: object
      properties:
        brands:
          type: array
          items:
            allOf:
            - $ref: "#/components/schemas/BrandItem"
    AddDesignReq:
      properties:
        design:
          x-speakeasy-entity: Design
          allOf: 
          - $ref: "#/components/schemas/ItemMetada"
          - $ref: "#/components/schemas/DesignItem"
          - $ref: "#/components/schemas/Custom_Style"
      required:
        - design
    AddDesignRes:
      type: object
      properties:
        design:
          x-speakeasy-entity: Design
          allOf:
          - $ref: "#/components/schemas/ItemMetada"
          - $ref: "#/components/schemas/DesignItem"
          - $ref: "#/components/schemas/Custom_Style"
    GetDesignRes:
      type: object
      properties:
        design:
          x-speakeasy-entity: Design
          allOf:
          - $ref: "#/components/schemas/ItemMetada"
          - $ref: "#/components/schemas/DesignItem"
          - $ref: "#/components/schemas/Custom_Style"
    UpdateDesignReq:
      type: object
      properties:
        design:
          x-speakeasy-entity: Design
          allOf: 
          - $ref: "#/components/schemas/ItemMetada"
          - $ref: "#/components/schemas/DesignItem"
          - $ref: "#/components/schemas/Custom_Style"
      required:
        - design
    ItemMetada:
      type: object
      properties:
        id: 
          type: string
        created_at: 
          type: string 
          description: Creation date and time using ISO 8601 full-time format
          example: "2021-01-30T08:30:00Z"
        created_by: 
          type: string
        edited: 
          type: boolean
        last_modified_at:  
          type: string 
    DesignItem:
      type: object
      properties:
        brand_id: 
          x-speakeasy-type-override: any
          type: string
        brand_name: 
          type: string
        user: 
          type: object
          properties:
            emailaddress: 
              type: string
            fullname: 
              type: string
            name: 
              type: string
            userid: 
              type: string
        style_name: 
          type: string
        style:
          x-speakeasy-type-override: any
          type: object
          properties:
            logo: 
              type: object
              $ref: "#/components/schemas/LogoData"
            palette: 
              type: object
              $ref: "#/components/schemas/PaletteData"
            typography: 
              type: object
              $ref: "#/components/schemas/TypographyData"
            consumer: 
              type: object
              $ref: "#/components/schemas/ConsumerData"
          required:
            - palette
            - typography
            - consumer
      required:
        - style_name
        - status
        - edited
        - style
    BrandItem:
      type: object
      properties:
        id: 
          type: string
        name: 
          type: string
        created_by: 
          type: string
        created_date: 
          type: string
        main_brand: 
          type: string
        organization_id: 
          type: string
        updated_date: 
          type: string
        updated_by: 
          type: string
        status: 
          type: string
      required:
        - id
        - name
    Custom_Style:
      type: object
      properties:
        custom_theme:
          x-speakeasy-type-override: any
          type: object
        use_custom_theme:
          type: boolean
    ConsumerData:
      type: object
      properties:
        widgets: 
          type: array
          items: {}
        customer_portals: 
          type: array
          items:
            anyOf:
            - $ref: "#/components/schemas/CustomerPortalData"
      required:
        - widgets
        - customer_portals
    WidgetData:
      allOf:
        - $ref: "#/components/schemas/WidgetPortalData"
    CustomerPortalData:
      allOf:
        - $ref: "#/components/schemas/WidgetPortalData"
    LogoData:
      type: object
      properties:
        main:
          type: object
          $ref: "#/components/schemas/FileData"
    PaletteData:
      type: object
      properties:
        primary: 
          type: string
        secondary: 
          type: string
        error: 
          type: string
        background: 
          type: string
        paper: 
          type: string
        navbar: 
          type: string
      required:
        - primary
        - secondary
        - error
        - background
        - paper
        - navbar
    TypographyData:
      type: object
      properties:
        font: 
          type: object
          $ref: "#/components/schemas/FontData"
        primary: 
          type: string
        secondary: 
          type: string
      required:
        - font
        - primary
        - secondary
    FontData:
      type: object
      properties:
        font_id: 
          type: string
        font_name: 
          type: string
        font_family: 
          type: string
        font_weight_regular:
          type: string
        font_weight_medium:
          type: string
        font_weight_bold:
          type: string
        urls:
          type: array
          items: {}
      required:
        - font_id
        - font_name
        - urls
    FontResponseUrl:
      type: object
      properties:
        type:
          type: string
          enum:
            - WOFF2
            - WOFF
            - TTF
            - EOT
        url:
          type: string
    WidgetPortalData:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      required:
        - id
        - name
    ErrorResp:
      type: object
      properties:
        message:
          type: string
    FileData:
      type: object
      properties:
        name: 
          type: string
        display_name:
          type: string
        file_type:
          type: string
          enum:
            - LOGO
            - FONT 
        s3_object_key: 
          type: string
        url: 
          type: string
      required:
        - name
        - s3_object_key
        - url

