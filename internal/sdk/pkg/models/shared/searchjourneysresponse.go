// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type SearchJourneysResponseResultsCreatedBy struct {
	// User ID
	ID *string `json:"id,omitempty"`
}

// SearchJourneysResponseResultsJourneyVersionEnum - Journey Version
type SearchJourneysResponseResultsJourneyVersionEnum string

const (
	SearchJourneysResponseResultsJourneyVersionEnumFlex   SearchJourneysResponseResultsJourneyVersionEnum = "Flex"
	SearchJourneysResponseResultsJourneyVersionEnumWidget SearchJourneysResponseResultsJourneyVersionEnum = "Widget"
)

func (e *SearchJourneysResponseResultsJourneyVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Flex":
		fallthrough
	case "Widget":
		*e = SearchJourneysResponseResultsJourneyVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SearchJourneysResponseResultsJourneyVersionEnum: %s", s)
	}
}

type SearchJourneysResponseResults struct {
	CreatedAt *time.Time `json:"_created_at,omitempty"`
	// Journey Entity ID
	ID *string `json:"_id,omitempty"`
	// Organization ID
	Org *string `json:"_org,omitempty"`
	// Entity Schema (journey always in this case)
	Schema *string  `json:"_schema,omitempty"`
	Tags   []string `json:"_tags,omitempty"`
	// Journey Entity Title
	Title     *string                                  `json:"_title,omitempty"`
	UpdatedAt *time.Time                               `json:"_updated_at,omitempty"`
	CreatedBy []SearchJourneysResponseResultsCreatedBy `json:"created_by,omitempty"`
	// Journey Design Name
	Design *string `json:"design,omitempty"`
	// Journey config ID
	JourneyID *string `json:"journey_id,omitempty"`
	// Journey Name
	JourneyName *string `json:"journey_name,omitempty"`
	// Journey Template
	JourneyType *string `json:"journey_type,omitempty"`
	// Journey Version
	JourneyVersion *SearchJourneysResponseResultsJourneyVersionEnum `json:"journey_version,omitempty"`
}

// SearchJourneysResponse - Success
type SearchJourneysResponse struct {
	// The total number of hits.
	//
	Hits *float64 `json:"hits,omitempty"`
	// The results.
	//
	Results []SearchJourneysResponseResults `json:"results,omitempty"`
}
