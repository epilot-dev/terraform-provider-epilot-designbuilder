// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"errors"
	"github.com/epilot-dev/terraform-provider-epilot-designbuilder/internal/sdk/pkg/utils"
)

type GetDesignResBrandIDType string

const (
	GetDesignResBrandIDTypeStr    GetDesignResBrandIDType = "str"
	GetDesignResBrandIDTypeNumber GetDesignResBrandIDType = "number"
)

type GetDesignResBrandID struct {
	Str    *string
	Number *float64

	Type GetDesignResBrandIDType
}

func CreateGetDesignResBrandIDStr(str string) GetDesignResBrandID {
	typ := GetDesignResBrandIDTypeStr

	return GetDesignResBrandID{
		Str:  &str,
		Type: typ,
	}
}

func CreateGetDesignResBrandIDNumber(number float64) GetDesignResBrandID {
	typ := GetDesignResBrandIDTypeNumber

	return GetDesignResBrandID{
		Number: &number,
		Type:   typ,
	}
}

func (u *GetDesignResBrandID) UnmarshalJSON(data []byte) error {

	str := new(string)
	if err := utils.UnmarshalJSON(data, &str, "", true, true); err == nil {
		u.Str = str
		u.Type = GetDesignResBrandIDTypeStr
		return nil
	}

	number := new(float64)
	if err := utils.UnmarshalJSON(data, &number, "", true, true); err == nil {
		u.Number = number
		u.Type = GetDesignResBrandIDTypeNumber
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u GetDesignResBrandID) MarshalJSON() ([]byte, error) {
	if u.Str != nil {
		return utils.MarshalJSON(u.Str, "", true)
	}

	if u.Number != nil {
		return utils.MarshalJSON(u.Number, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

type GetDesignResCustomTheme struct {
}

type GetDesignResStyle struct {
	Consumer   ConsumerData   `json:"consumer"`
	Logo       *LogoData      `json:"logo,omitempty"`
	Palette    PaletteData    `json:"palette"`
	Typography TypographyData `json:"typography"`
}

func (o *GetDesignResStyle) GetConsumer() ConsumerData {
	if o == nil {
		return ConsumerData{}
	}
	return o.Consumer
}

func (o *GetDesignResStyle) GetLogo() *LogoData {
	if o == nil {
		return nil
	}
	return o.Logo
}

func (o *GetDesignResStyle) GetPalette() PaletteData {
	if o == nil {
		return PaletteData{}
	}
	return o.Palette
}

func (o *GetDesignResStyle) GetTypography() TypographyData {
	if o == nil {
		return TypographyData{}
	}
	return o.Typography
}

type GetDesignResUser struct {
	Emailaddress *string `json:"emailaddress,omitempty"`
	Fullname     *string `json:"fullname,omitempty"`
	Name         *string `json:"name,omitempty"`
	Userid       *string `json:"userid,omitempty"`
}

func (o *GetDesignResUser) GetEmailaddress() *string {
	if o == nil {
		return nil
	}
	return o.Emailaddress
}

func (o *GetDesignResUser) GetFullname() *string {
	if o == nil {
		return nil
	}
	return o.Fullname
}

func (o *GetDesignResUser) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *GetDesignResUser) GetUserid() *string {
	if o == nil {
		return nil
	}
	return o.Userid
}

type GetDesignResDesign struct {
	BrandID   *GetDesignResBrandID `json:"brand_id,omitempty"`
	BrandName *string              `json:"brand_name,omitempty"`
	// Creation date and time using ISO 8601 full-time format
	CreatedAt      *string                  `json:"created_at,omitempty"`
	CreatedBy      *string                  `json:"created_by,omitempty"`
	CustomTheme    *GetDesignResCustomTheme `json:"custom_theme,omitempty"`
	Edited         bool                     `json:"edited"`
	ID             *string                  `json:"id,omitempty"`
	LastModifiedAt *string                  `json:"last_modified_at,omitempty"`
	Style          GetDesignResStyle        `json:"style"`
	StyleName      string                   `json:"style_name"`
	UseCustomTheme *bool                    `json:"use_custom_theme,omitempty"`
	User           *GetDesignResUser        `json:"user,omitempty"`
}

func (o *GetDesignResDesign) GetBrandID() *GetDesignResBrandID {
	if o == nil {
		return nil
	}
	return o.BrandID
}

func (o *GetDesignResDesign) GetBrandName() *string {
	if o == nil {
		return nil
	}
	return o.BrandName
}

func (o *GetDesignResDesign) GetCreatedAt() *string {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *GetDesignResDesign) GetCreatedBy() *string {
	if o == nil {
		return nil
	}
	return o.CreatedBy
}

func (o *GetDesignResDesign) GetCustomTheme() *GetDesignResCustomTheme {
	if o == nil {
		return nil
	}
	return o.CustomTheme
}

func (o *GetDesignResDesign) GetEdited() bool {
	if o == nil {
		return false
	}
	return o.Edited
}

func (o *GetDesignResDesign) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *GetDesignResDesign) GetLastModifiedAt() *string {
	if o == nil {
		return nil
	}
	return o.LastModifiedAt
}

func (o *GetDesignResDesign) GetStyle() GetDesignResStyle {
	if o == nil {
		return GetDesignResStyle{}
	}
	return o.Style
}

func (o *GetDesignResDesign) GetStyleName() string {
	if o == nil {
		return ""
	}
	return o.StyleName
}

func (o *GetDesignResDesign) GetUseCustomTheme() *bool {
	if o == nil {
		return nil
	}
	return o.UseCustomTheme
}

func (o *GetDesignResDesign) GetUser() *GetDesignResUser {
	if o == nil {
		return nil
	}
	return o.User
}

type GetDesignRes struct {
	Design *GetDesignResDesign `json:"design,omitempty"`
}

func (o *GetDesignRes) GetDesign() *GetDesignResDesign {
	if o == nil {
		return nil
	}
	return o.Design
}
