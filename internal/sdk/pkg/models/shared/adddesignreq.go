// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/epilot-dev/terraform-provider-epilot-designbuilder/internal/sdk/pkg/utils"
	"time"
)

type Style struct {
	Consumer   ConsumerData   `json:"consumer"`
	Logo       *LogoData      `json:"logo,omitempty"`
	Palette    PaletteData    `json:"palette"`
	Typography TypographyData `json:"typography"`
}

func (o *Style) GetConsumer() ConsumerData {
	if o == nil {
		return ConsumerData{}
	}
	return o.Consumer
}

func (o *Style) GetLogo() *LogoData {
	if o == nil {
		return nil
	}
	return o.Logo
}

func (o *Style) GetPalette() PaletteData {
	if o == nil {
		return PaletteData{}
	}
	return o.Palette
}

func (o *Style) GetTypography() TypographyData {
	if o == nil {
		return TypographyData{}
	}
	return o.Typography
}

type User struct {
	Emailaddress *string `json:"emailaddress,omitempty"`
	Fullname     *string `json:"fullname,omitempty"`
	Name         *string `json:"name,omitempty"`
	Userid       *string `json:"userid,omitempty"`
}

func (o *User) GetEmailaddress() *string {
	if o == nil {
		return nil
	}
	return o.Emailaddress
}

func (o *User) GetFullname() *string {
	if o == nil {
		return nil
	}
	return o.Fullname
}

func (o *User) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *User) GetUserid() *string {
	if o == nil {
		return nil
	}
	return o.Userid
}

type Design struct {
	BrandID   *string `json:"brand_id,omitempty"`
	BrandName *string `json:"brand_name,omitempty"`
	// Creation date and time using ISO 8601 full-time format
	CreatedAt      *time.Time `json:"created_at,omitempty"`
	CreatedBy      *string    `json:"created_by,omitempty"`
	CustomTheme    *string    `json:"custom_theme,omitempty"`
	Edited         bool       `json:"edited"`
	ID             *string    `json:"id,omitempty"`
	LastModifiedAt *time.Time `json:"last_modified_at,omitempty"`
	Style          Style      `json:"style"`
	StyleName      string     `json:"style_name"`
	UseCustomTheme *bool      `json:"use_custom_theme,omitempty"`
	User           *User      `json:"user,omitempty"`
}

func (d Design) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(d, "", false)
}

func (d *Design) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &d, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *Design) GetBrandID() *string {
	if o == nil {
		return nil
	}
	return o.BrandID
}

func (o *Design) GetBrandName() *string {
	if o == nil {
		return nil
	}
	return o.BrandName
}

func (o *Design) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *Design) GetCreatedBy() *string {
	if o == nil {
		return nil
	}
	return o.CreatedBy
}

func (o *Design) GetCustomTheme() *string {
	if o == nil {
		return nil
	}
	return o.CustomTheme
}

func (o *Design) GetEdited() bool {
	if o == nil {
		return false
	}
	return o.Edited
}

func (o *Design) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *Design) GetLastModifiedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.LastModifiedAt
}

func (o *Design) GetStyle() Style {
	if o == nil {
		return Style{}
	}
	return o.Style
}

func (o *Design) GetStyleName() string {
	if o == nil {
		return ""
	}
	return o.StyleName
}

func (o *Design) GetUseCustomTheme() *bool {
	if o == nil {
		return nil
	}
	return o.UseCustomTheme
}

func (o *Design) GetUser() *User {
	if o == nil {
		return nil
	}
	return o.User
}

type AddDesignReq struct {
	Design Design `json:"design"`
}

func (o *AddDesignReq) GetDesign() Design {
	if o == nil {
		return Design{}
	}
	return o.Design
}
