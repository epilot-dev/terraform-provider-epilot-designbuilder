// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type JourneyCreationRequestDesign struct {
	LogoURL *string                `json:"logoUrl,omitempty"`
	Theme   map[string]interface{} `json:"theme"`
}

type JourneyCreationRequestLogics struct {
	Actions         []string `json:"actions"`
	AutoGeneratedID *string  `json:"autoGeneratedId,omitempty"`
	Conditions      []string `json:"conditions"`
}

type JourneyCreationRequestRulesSourceTypeEnum string

const (
	JourneyCreationRequestRulesSourceTypeEnumJourney JourneyCreationRequestRulesSourceTypeEnum = "journey"
	JourneyCreationRequestRulesSourceTypeEnumStep    JourneyCreationRequestRulesSourceTypeEnum = "step"
	JourneyCreationRequestRulesSourceTypeEnumBlock   JourneyCreationRequestRulesSourceTypeEnum = "block"
)

func (e JourneyCreationRequestRulesSourceTypeEnum) ToPointer() *JourneyCreationRequestRulesSourceTypeEnum {
	return &e
}

func (e *JourneyCreationRequestRulesSourceTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "journey":
		fallthrough
	case "step":
		fallthrough
	case "block":
		*e = JourneyCreationRequestRulesSourceTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for JourneyCreationRequestRulesSourceTypeEnum: %v", v)
	}
}

type JourneyCreationRequestRulesTypeEnum string

const (
	JourneyCreationRequestRulesTypeEnumInject        JourneyCreationRequestRulesTypeEnum = "inject"
	JourneyCreationRequestRulesTypeEnumInjectWithKey JourneyCreationRequestRulesTypeEnum = "injectWithKey"
)

func (e JourneyCreationRequestRulesTypeEnum) ToPointer() *JourneyCreationRequestRulesTypeEnum {
	return &e
}

func (e *JourneyCreationRequestRulesTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "inject":
		fallthrough
	case "injectWithKey":
		*e = JourneyCreationRequestRulesTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for JourneyCreationRequestRulesTypeEnum: %v", v)
	}
}

type JourneyCreationRequestRules struct {
	Source     string                                    `json:"source"`
	SourceType JourneyCreationRequestRulesSourceTypeEnum `json:"sourceType"`
	Target     string                                    `json:"target"`
	Type       JourneyCreationRequestRulesTypeEnum       `json:"type"`
}

type JourneyCreationRequestSettingsEmbedOptionsButtonAlignEnum string

const (
	JourneyCreationRequestSettingsEmbedOptionsButtonAlignEnumLeft   JourneyCreationRequestSettingsEmbedOptionsButtonAlignEnum = "left"
	JourneyCreationRequestSettingsEmbedOptionsButtonAlignEnumCenter JourneyCreationRequestSettingsEmbedOptionsButtonAlignEnum = "center"
	JourneyCreationRequestSettingsEmbedOptionsButtonAlignEnumRight  JourneyCreationRequestSettingsEmbedOptionsButtonAlignEnum = "right"
)

func (e JourneyCreationRequestSettingsEmbedOptionsButtonAlignEnum) ToPointer() *JourneyCreationRequestSettingsEmbedOptionsButtonAlignEnum {
	return &e
}

func (e *JourneyCreationRequestSettingsEmbedOptionsButtonAlignEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "left":
		fallthrough
	case "center":
		fallthrough
	case "right":
		*e = JourneyCreationRequestSettingsEmbedOptionsButtonAlignEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for JourneyCreationRequestSettingsEmbedOptionsButtonAlignEnum: %v", v)
	}
}

type JourneyCreationRequestSettingsEmbedOptionsButton struct {
	Align *JourneyCreationRequestSettingsEmbedOptionsButtonAlignEnum `json:"align,omitempty"`
	Text  *string                                                    `json:"text,omitempty"`
}

type JourneyCreationRequestSettingsEmbedOptionsLangEnum string

const (
	JourneyCreationRequestSettingsEmbedOptionsLangEnumDe JourneyCreationRequestSettingsEmbedOptionsLangEnum = "de"
	JourneyCreationRequestSettingsEmbedOptionsLangEnumEn JourneyCreationRequestSettingsEmbedOptionsLangEnum = "en"
	JourneyCreationRequestSettingsEmbedOptionsLangEnumFr JourneyCreationRequestSettingsEmbedOptionsLangEnum = "fr"
)

func (e JourneyCreationRequestSettingsEmbedOptionsLangEnum) ToPointer() *JourneyCreationRequestSettingsEmbedOptionsLangEnum {
	return &e
}

func (e *JourneyCreationRequestSettingsEmbedOptionsLangEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "de":
		fallthrough
	case "en":
		fallthrough
	case "fr":
		*e = JourneyCreationRequestSettingsEmbedOptionsLangEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for JourneyCreationRequestSettingsEmbedOptionsLangEnum: %v", v)
	}
}

type JourneyCreationRequestSettingsEmbedOptionsModeEnum string

const (
	JourneyCreationRequestSettingsEmbedOptionsModeEnumFullScreen JourneyCreationRequestSettingsEmbedOptionsModeEnum = "full-screen"
	JourneyCreationRequestSettingsEmbedOptionsModeEnumInline     JourneyCreationRequestSettingsEmbedOptionsModeEnum = "inline"
)

func (e JourneyCreationRequestSettingsEmbedOptionsModeEnum) ToPointer() *JourneyCreationRequestSettingsEmbedOptionsModeEnum {
	return &e
}

func (e *JourneyCreationRequestSettingsEmbedOptionsModeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "full-screen":
		fallthrough
	case "inline":
		*e = JourneyCreationRequestSettingsEmbedOptionsModeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for JourneyCreationRequestSettingsEmbedOptionsModeEnum: %v", v)
	}
}

type JourneyCreationRequestSettingsEmbedOptions struct {
	Button      *JourneyCreationRequestSettingsEmbedOptionsButton   `json:"button,omitempty"`
	Lang        *JourneyCreationRequestSettingsEmbedOptionsLangEnum `json:"lang,omitempty"`
	Mode        *JourneyCreationRequestSettingsEmbedOptionsModeEnum `json:"mode,omitempty"`
	ScrollToTop *bool                                               `json:"scrollToTop,omitempty"`
	TopBar      *bool                                               `json:"topBar,omitempty"`
	Width       *string                                             `json:"width,omitempty"`
}

type JourneyCreationRequestSettingsRuntimeEntitiesEnum string

const (
	JourneyCreationRequestSettingsRuntimeEntitiesEnumOrder       JourneyCreationRequestSettingsRuntimeEntitiesEnum = "ORDER"
	JourneyCreationRequestSettingsRuntimeEntitiesEnumOpportunity JourneyCreationRequestSettingsRuntimeEntitiesEnum = "OPPORTUNITY"
)

func (e JourneyCreationRequestSettingsRuntimeEntitiesEnum) ToPointer() *JourneyCreationRequestSettingsRuntimeEntitiesEnum {
	return &e
}

func (e *JourneyCreationRequestSettingsRuntimeEntitiesEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ORDER":
		fallthrough
	case "OPPORTUNITY":
		*e = JourneyCreationRequestSettingsRuntimeEntitiesEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for JourneyCreationRequestSettingsRuntimeEntitiesEnum: %v", v)
	}
}

type JourneyCreationRequestSettings struct {
	Description          *string                                             `json:"description,omitempty"`
	DesignID             string                                              `json:"designId"`
	EmbedOptions         *JourneyCreationRequestSettingsEmbedOptions         `json:"embedOptions,omitempty"`
	EntityID             *string                                             `json:"entityId,omitempty"`
	EntityTags           []string                                            `json:"entityTags,omitempty"`
	MappingsAutomationID *string                                             `json:"mappingsAutomationId,omitempty"`
	OrganizationSettings map[string]bool                                     `json:"organizationSettings,omitempty"`
	PublicToken          *string                                             `json:"publicToken,omitempty"`
	RuntimeEntities      []JourneyCreationRequestSettingsRuntimeEntitiesEnum `json:"runtimeEntities,omitempty"`
	SafeModeAutomation   *bool                                               `json:"safeModeAutomation,omitempty"`
	TargetedCustomer     *string                                             `json:"targetedCustomer,omitempty"`
	TemplateID           *string                                             `json:"templateId,omitempty"`
}

type JourneyCreationRequestSteps struct {
	HideNextButton    *bool       `json:"hideNextButton,omitempty"`
	Name              string      `json:"name"`
	Schema            interface{} `json:"schema"`
	ShowStepName      *bool       `json:"showStepName,omitempty"`
	ShowStepSubtitle  *bool       `json:"showStepSubtitle,omitempty"`
	ShowStepper       *bool       `json:"showStepper,omitempty"`
	ShowStepperLabels *bool       `json:"showStepperLabels,omitempty"`
	StepID            *string     `json:"stepId,omitempty"`
	SubTitle          *string     `json:"subTitle,omitempty"`
	Title             *string     `json:"title,omitempty"`
	Uischema          interface{} `json:"uischema"`
}

// JourneyCreationRequest - Payload
type JourneyCreationRequest struct {
	BrandID        string                          `json:"brandId"`
	CreatedBy      *string                         `json:"createdBy,omitempty"`
	Design         *JourneyCreationRequestDesign   `json:"design,omitempty"`
	JourneyID      *string                         `json:"journeyId,omitempty"`
	Logics         []JourneyCreationRequestLogics  `json:"logics,omitempty"`
	Name           string                          `json:"name"`
	OrganizationID string                          `json:"organizationId"`
	Rules          []JourneyCreationRequestRules   `json:"rules,omitempty"`
	Settings       *JourneyCreationRequestSettings `json:"settings,omitempty"`
	Steps          []JourneyCreationRequestSteps   `json:"steps"`
}
