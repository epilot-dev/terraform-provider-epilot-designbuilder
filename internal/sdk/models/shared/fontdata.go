// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"errors"
	"fmt"
	"github.com/epilot-dev/terraform-provider-epilot-designbuilder/internal/sdk/internal/utils"
)

type UrlsType string

const (
	UrlsTypeFontResponseURL UrlsType = "FontResponseUrl"
)

type Urls struct {
	FontResponseURL *FontResponseURL `queryParam:"inline"`

	Type UrlsType
}

func CreateUrlsFontResponseURL(fontResponseURL FontResponseURL) Urls {
	typ := UrlsTypeFontResponseURL

	return Urls{
		FontResponseURL: &fontResponseURL,
		Type:            typ,
	}
}

func (u *Urls) UnmarshalJSON(data []byte) error {

	var fontResponseURL FontResponseURL = FontResponseURL{}
	if err := utils.UnmarshalJSON(data, &fontResponseURL, "", true, true); err == nil {
		u.FontResponseURL = &fontResponseURL
		u.Type = UrlsTypeFontResponseURL
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for Urls", string(data))
}

func (u Urls) MarshalJSON() ([]byte, error) {
	if u.FontResponseURL != nil {
		return utils.MarshalJSON(u.FontResponseURL, "", true)
	}

	return nil, errors.New("could not marshal union type Urls: all fields are null")
}

type FontData struct {
	FontFamily        *string `json:"font_family,omitempty"`
	FontID            string  `json:"font_id"`
	FontName          string  `json:"font_name"`
	FontWeightBold    *string `json:"font_weight_bold,omitempty"`
	FontWeightMedium  *string `json:"font_weight_medium,omitempty"`
	FontWeightRegular *string `json:"font_weight_regular,omitempty"`
	Urls              []Urls  `json:"urls"`
}

func (o *FontData) GetFontFamily() *string {
	if o == nil {
		return nil
	}
	return o.FontFamily
}

func (o *FontData) GetFontID() string {
	if o == nil {
		return ""
	}
	return o.FontID
}

func (o *FontData) GetFontName() string {
	if o == nil {
		return ""
	}
	return o.FontName
}

func (o *FontData) GetFontWeightBold() *string {
	if o == nil {
		return nil
	}
	return o.FontWeightBold
}

func (o *FontData) GetFontWeightMedium() *string {
	if o == nil {
		return nil
	}
	return o.FontWeightMedium
}

func (o *FontData) GetFontWeightRegular() *string {
	if o == nil {
		return nil
	}
	return o.FontWeightRegular
}

func (o *FontData) GetUrls() []Urls {
	if o == nil {
		return []Urls{}
	}
	return o.Urls
}
