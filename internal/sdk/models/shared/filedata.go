// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type FileType string

const (
	FileTypeLogo FileType = "LOGO"
	FileTypeFont FileType = "FONT"
)

func (e FileType) ToPointer() *FileType {
	return &e
}
func (e *FileType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "LOGO":
		fallthrough
	case "FONT":
		*e = FileType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FileType: %v", v)
	}
}

type FileData struct {
	DisplayName *string   `json:"display_name,omitempty"`
	FileType    *FileType `json:"file_type,omitempty"`
	Name        string    `json:"name"`
	S3ObjectKey string    `json:"s3_object_key"`
	URL         string    `json:"url"`
}

func (o *FileData) GetDisplayName() *string {
	if o == nil {
		return nil
	}
	return o.DisplayName
}

func (o *FileData) GetFileType() *FileType {
	if o == nil {
		return nil
	}
	return o.FileType
}

func (o *FileData) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *FileData) GetS3ObjectKey() string {
	if o == nil {
		return ""
	}
	return o.S3ObjectKey
}

func (o *FileData) GetURL() string {
	if o == nil {
		return ""
	}
	return o.URL
}
